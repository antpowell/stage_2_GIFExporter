{"version":3,"sources":["src\\gif.exporter.single.worker.ts","src\\game.ts"],"names":[],"mappings":"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","file":"game.87537101.map","sourceRoot":"..","sourcesContent":["export class GIFCreator {\n\tprivate _canvas: HTMLCanvasElement;\n\tprivate _delay: number;\n\tprivate _duration: number;\n\tprivate _width: number;\n\tprivate _height: number;\n\tprivate _message: { job: string; frames?: Uint8Array[]; params?: {} };\n\tprivate _worker: Worker;\n\tprivate _holdingCanvas: HTMLCanvasElement;\n\tprivate _holdingCanvas2D: CanvasRenderingContext2D;\n\tprivate _resizeCanvas: HTMLCanvasElement;\n\tprivate _resizeCanvas2D: CanvasRenderingContext2D;\n\n\tconstructor(engine: BABYLON.Engine, options?: { delay?: number; duration?: number }) {\n\t\tthis._canvas = engine.getRenderingCanvas();\n\t\tthis._delay = options.delay;\n\t\tthis._duration = options.duration;\n\t}\n\n\tpublic start(): Promise<number[]> {\n\t\treturn new Promise(async (resolve, reject) => {\n\t\t\tthis.init();\n\t\t\tconsole.log('record canvas');\n\t\t\tlet intervalRef = setInterval(async () => {\n\t\t\t\tconst frame = await this.getFrame();\n\t\t\t\tconst newFrame = await this.flipAndRotate(new Uint8Array(frame));\n\t\t\t\tconsole.log(new Uint8Array(newFrame));\n\n\t\t\t\tconst message = {\n\t\t\t\t\tjob: 'collectFrames',\n\t\t\t\t\tparams: {\n\t\t\t\t\t\tframe: newFrame,\n\t\t\t\t\t},\n\t\t\t\t};\n\t\t\t\tthis._worker.postMessage(message, [message.params.frame]);\n\t\t\t}, this._delay);\n\t\t\tsetTimeout(() => {\n\t\t\t\tclearInterval(intervalRef);\n\t\t\t\tconst message = {\n\t\t\t\t\tjob: 'createGIF',\n\t\t\t\t\tparams: { width: this._resizeCanvas.width, height: this._resizeCanvas.height },\n\t\t\t\t};\n\t\t\t\tthis._worker.postMessage(message);\n\t\t\t\tthis._worker.onmessage = ({ data }) => {\n\t\t\t\t\tconsole.log('complete', data);\n\t\t\t\t\tresolve(data);\n\t\t\t\t};\n\t\t\t}, this._duration);\n\t\t});\n\t}\n\n\tpublic stop(): void {}\n\n\tpublic cancel(): void {}\n\n\tpublic download(filename = 'canvasGIF.gif'): Promise<{}> {\n\t\treturn new Promise(async (resolve, reject) => {\n\t\t\tconst gif = await this.start();\n\t\t\tconst url = URL.createObjectURL(\n\t\t\t\tnew Blob([new Uint8Array(gif)], {\n\t\t\t\t\ttype: 'image/gif',\n\t\t\t\t})\n\t\t\t);\n\t\t\tconst download = document.createElement('a');\n\t\t\tdocument.body.appendChild(download);\n\t\t\tdownload.target = '_blank';\n\t\t\tdownload.setAttribute('target', '_blank');\n\t\t\tdownload.style.display = 'none';\n\t\t\tdownload.href = url;\n\t\t\tdownload.download = filename;\n\t\t\tdownload.click();\n\t\t\tURL.revokeObjectURL(url);\n\t\t\tdownload.parentElement.removeChild(download);\n\t\t\tresolve();\n\t\t});\n\t}\n\n\tprivate getFrame(): Promise<ArrayBuffer> {\n\t\treturn new Promise(async (resolve, reject) => {\n\t\t\tconst gl = this._canvas.getContext('webgl2') || this._canvas.getContext('webgl');\n\t\t\tlet pixels = new Uint8Array(this._width * this._height * 4);\n\t\t\tgl.readPixels(0, 0, this._width, this._height, gl.RGBA, gl.UNSIGNED_BYTE, pixels);\n\t\t\tresolve(pixels.buffer);\n\t\t});\n\t}\n\n\tprivate init() {\n\t\tthis._width = this._canvas.width;\n\t\tthis._height = this._canvas.height;\n\t\tthis._worker = new Worker('./gif.creator.service.ts');\n\t\tthis.canvasSetup();\n\t}\n\n\tprivate canvasSetup() {\n\t\tthis._holdingCanvas = document.createElement('canvas');\n\t\tthis._holdingCanvas2D = this._holdingCanvas.getContext('2d');\n\t\tthis._holdingCanvas.width = this._width;\n\t\tthis._holdingCanvas.height = this._height;\n\t\tthis._resizeCanvas = document.createElement('canvas');\n\t\tthis._resizeCanvas2D = this._resizeCanvas.getContext('2d');\n\t}\n\n\tprivate flipAndRotate(frame: Uint8Array): Promise<ArrayBuffer> {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tconst imageData = this._holdingCanvas2D.createImageData(this._width, this._height);\n\t\t\timageData.data.set(frame);\n\t\t\tthis._holdingCanvas2D.putImageData(imageData, 0, 0);\n\t\t\tthis.resize(this._resizeCanvas);\n\t\t\tthis.flip(this._resizeCanvas2D, this._holdingCanvas, this._resizeCanvas);\n\n\t\t\tconst data = this._resizeCanvas2D.getImageData(0, 0, this._resizeCanvas.width, this._resizeCanvas.height).data;\n\n\t\t\tresolve(data.buffer);\n\t\t});\n\t}\n\n\tprivate resize(canvas: HTMLCanvasElement) {\n\t\treturn new Promise((resolve, rejct) => {\n\t\t\tconst baseSize = 256;\n\t\t\tconst imageAspectRatio = this._width / this._height;\n\t\t\tif (imageAspectRatio < 1) {\n\t\t\t\tcanvas.width = baseSize * imageAspectRatio;\n\t\t\t\tcanvas.height = baseSize;\n\t\t\t} else if (imageAspectRatio > 1) {\n\t\t\t\tcanvas.width = baseSize;\n\t\t\t\tcanvas.height = baseSize / imageAspectRatio;\n\t\t\t} else {\n\t\t\t\tcanvas.width = baseSize;\n\t\t\t\tcanvas.height = baseSize;\n\t\t\t}\n\n\t\t\tcanvas.width = Math.max(canvas.width, 1);\n\t\t\tcanvas.height = Math.max(canvas.height, 1);\n\t\t\tresolve();\n\t\t});\n\t}\n\n\tprivate flip(resizeContext: CanvasRenderingContext2D, holdingCanvas: HTMLCanvasElement, resizeCanvas: HTMLCanvasElement) {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\t// Scale and draw to flip Y to reorient readPixels.\n\t\t\tresizeContext.globalCompositeOperation = 'copy';\n\t\t\tresizeContext.scale(1, -1); // Y flip\n\t\t\tresizeContext.translate(0, -resizeCanvas.height); // so we can draw at 0,0\n\t\t\tresizeContext.drawImage(holdingCanvas, 0, 0, this._width, this._height, 0, 0, resizeCanvas.width, resizeCanvas.height);\n\t\t\tresizeContext.setTransform(1, 0, 0, 1, 0, 0);\n\t\t\tresizeContext.globalCompositeOperation = 'source-over';\n\t\t});\n\t}\n}\n","import { GIFCreator } from './gif.exporter.single.worker';\nexport class Game {\n\tprivate _canvas: HTMLCanvasElement;\n\tprivate _engine: BABYLON.Engine;\n\tprivate _scene: BABYLON.Scene;\n\tprivate _camera: BABYLON.FreeCamera;\n\tprivate _light: BABYLON.Light;\n\tprivate _gifExporter: GIFCreator;\n\n\tconstructor(canvasElement: string) {\n\t\tthis._canvas = document.getElementById(canvasElement) as HTMLCanvasElement;\n\t\tthis._engine = new BABYLON.Engine(this._canvas, true, {\n\t\t\tpreserveDrawingBuffer: true,\n\t\t});\n\t\tthis._gifExporter = new GIFCreator(this._engine, {\n\t\t\tdelay: 60,\n\t\t\tduration: 5000,\n\t\t});\n\t}\n\n\tcreateScene(): void {\n\t\t// Create a basic BJS Scene object.\n\t\tthis._scene = new BABYLON.Scene(this._engine);\n\n\t\t// Create a FreeCamera, and set its position to (x:0, y:5, z:-10).\n\t\tthis._camera = new BABYLON.FreeCamera('camera1', new BABYLON.Vector3(0, 5, -10), this._scene);\n\n\t\t// Target the camera to scene origin.\n\t\tthis._camera.setTarget(BABYLON.Vector3.Zero());\n\n\t\t// Attach the camera to the canvas.\n\t\tthis._camera.attachControl(this._canvas, false);\n\n\t\t// Create a basic light, aiming 0,1,0 - meaning, to the sky.\n\t\tthis._light = new BABYLON.HemisphericLight('light1', new BABYLON.Vector3(0, 1, 0), this._scene);\n\n\t\t// Create a built-in \"sphere\" shape; with 16 segments and diameter of 2.\n\t\tlet sphere = BABYLON.MeshBuilder.CreateSphere(\n\t\t\t'sphere',\n\t\t\t{\n\t\t\t\tsegments: 16,\n\t\t\t\tdiameter: 2,\n\t\t\t},\n\t\t\tthis._scene\n\t\t);\n\n\t\t// Move the sphere upward 1/2 of its height.\n\t\tsphere.position.y = 1;\n\n\t\t// Create a built-in \"ground\" shape.\n\t\tlet ground = BABYLON.MeshBuilder.CreateGround(\n\t\t\t'ground',\n\t\t\t{\n\t\t\t\twidth: 6,\n\t\t\t\theight: 6,\n\t\t\t\tsubdivisions: 2,\n\t\t\t},\n\t\t\tthis._scene\n\t\t);\n\t}\n\n\tdoRender(): void {\n\t\t// Run the render loop.\n\t\tthis._engine.runRenderLoop(() => {\n\t\t\tthis._scene.render();\n\t\t});\n\n\t\t// The canvas/window resize event handler.\n\t\twindow.addEventListener('resize', () => {\n\t\t\tthis._engine.resize();\n\t\t});\n\t}\n\n\tdownloadGIF() {\n\t\treturn new Promise(async (resolve, reject) => {\n\t\t\tawait this._gifExporter.download();\n\t\t\tresolve();\n\t\t});\n\t}\n\tstopGIF() {\n\t\tthis._gifExporter.start();\n\t}\n}\n\nwindow.addEventListener('DOMContentLoaded', () => {\n\tconst recordBtn: HTMLButtonElement = document.getElementById('recordBtn') as HTMLButtonElement;\n\tconst stopBtn = document.getElementById('recStopBtn');\n\t// Setup GIF generator\n\n\t// Create the game using the 'renderCanvas'.\n\tlet game = new Game('renderCanvas');\n\n\t// Create the scene.\n\tgame.createScene();\n\n\t// Start render loop.\n\tgame.doRender();\n\n\trecordBtn.addEventListener('click', async () => {\n\t\trecordBtn.disabled = true;\n\t\tawait game.downloadGIF();\n\t\trecordBtn.disabled = false;\n\t});\n\tstopBtn.addEventListener('click', () => {\n\t\tgame.stopGIF();\n\t});\n});\n"]}