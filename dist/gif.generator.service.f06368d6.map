{"version":3,"sources":["src\\gif.generator.service.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,IAAA,kBAAA,QAAA,iBAAA,CAAA;AAEA,YAAY,mBAAC,EAAD,EAA4B;QAAzB,KAAA,GAAA;QAAQ,UAAA,GAAA;QAAS,OAAA,GAAA;AAC/B,YAAQ,OAAR;AACC,aAAK,MAAL;AACC,iBAAK,IAAL;AACA;AACD,aAAK,YAAL;AACC,sBAAU,IAAV;AACA;AACD;AACC,kBAAM,IAAI,KAAJ,CAAU,+BAAV,CAAN;AACA;AATF;AAWA,CAZD;AAcA,SAAA,IAAA,CAAc,EAAd,EAAwF;QAAxE,SAAA,GAAA;QAAQ,SAAA,GAAA;QAAQ,MAAA,GAAA;AAC/B,QAAM,eAAe,IAAI,gBAAA,YAAJ,CAAiB,MAAjB,EAAyB,MAAzB,EAAiC,GAAjC,CAArB;AACA,iBAAa,IAAb;AACA,gBAAY,eAAZ,EAA6B,MAA7B;AACA;AAED,SAAA,SAAA,CAAmB,EAAnB,EAA6F;AAA7F,QAAA,QAAA,IAAA;QAAqB,SAAA,GAAA;QAAQ,cAAA,GAAA;AAC5B,WAAO,OAAP,CAAe,UAAM,KAAN,EAAW;AAAA,eAAA,UAAA,KAAA,EAAA,KAAA,CAAA,EAAA,KAAA,CAAA,EAAA,YAAA;;;;AACzB,+BAAA,CAAA,CAAA,CAAA,SAAA,EAAM,YAAY,aAAZ,CAA0B,KAA1B,CAAN,CAAA;;AAAA,2BAAA,IAAA;;;;SADyB,CAAA;AAEzB,KAFD;AAGA","file":"gif.generator.service.f06368d6.map","sourceRoot":"..","sourcesContent":["import { GIFGenerator } from './gif.generator';\r\n\r\nonmessage = ({ data: { message, data } }) => {\r\n\tswitch (message) {\r\n\t\tcase 'init':\r\n\t\t\tinit(data);\r\n\t\t\tbreak;\r\n\t\tcase 'add frames':\r\n\t\t\taddFrames(data);\r\n\t\t\tbreak;\r\n\t\tdefault:\r\n\t\t\tthrow new Error('invalid message to GIF worker');\r\n\t\t\tbreak;\r\n\t}\r\n};\r\n\r\nfunction init({ weight, height, GCT }: { weight: number; height: number; GCT: string[] }): void {\r\n\tconst gifGenerator = new GIFGenerator(weight, height, GCT);\r\n\tgifGenerator.init();\r\n\tpostMessage('init complete', 'self');\r\n}\r\n\r\nfunction addFrames({ frames, gifInstance }: { frames: number[][]; gifInstance: GIFGenerator }): void {\r\n\tframes.forEach(async frame => {\r\n\t\tawait gifInstance.generateFrame(frame);\r\n\t});\r\n}\r\n"]}