{"version":3,"sources":["src\\gif.generator.service.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,IAAA,kBAAA,QAAA,iBAAA,CAAA;AAEA,IAAM,eAA6B,IAAI,gBAAA,YAAJ,EAAnC;AAEA,iBAAiB,SAAjB,EAA4B,UAAA,EAAA,EAAE;AAC7B,YAAQ,GAAR,CAAY,GAAG,IAAf;AACA,CAFD;AAGA,iBAAiB,SAAjB,EAA4B,WAA5B;AAEA,SAAA,IAAA,CAAc,KAAd,EAA6B,MAA7B,EAA6C,GAA7C,EAA0D;AACzD,YAAQ,GAAR,CAAY,aAAZ;AAEA,iBAAa,IAAb,CAAkB,KAAlB,EAAyB,MAAzB,EAAiC,GAAjC;AACA,gBAAY,eAAZ,EAA6B,MAA7B;AACA;AAED,SAAA,SAAA,CAAmB,EAAnB,EAAqD;QAAhC,SAAA,GAAA;AACpB,YAAQ,GAAR,CAAY,kBAAZ;AAEA,WAAO,OAAP,CAAe,UAAA,KAAA,EAAK;AACnB,qBAAa,aAAb,CAA2B,KAA3B;AACA,KAFD;AAGA;AAED,SAAA,SAAA,GAAA;AACC,YAAQ,GAAR,CAAY,cAAZ;AAEA,gBAAY,aAAa,SAAb,EAAZ;AACA;AAED,SAAA,WAAA,CAAqB,EAArB,EAA4C;QAArB,OAAA,GAAA;AACtB,YAAQ,GAAR,CAAY,IAAZ;AACA,YAAQ,KAAK,GAAb;AACC,aAAK,MAAL;AACO,gBAAA,KAAA,KAAA,MAAA;AAAA,gBAAE,QAAA,GAAA,KAAF;AAAA,gBAAS,SAAA,GAAA,MAAT;AAAA,gBAAiB,mBAAA,GAAA,gBAAjB;AACN,iBAAK,KAAL,EAAY,MAAZ,EAAoB,gBAApB;AACA;AACD,aAAK,eAAL;AACS,gBAAA,SAAA,KAAA,MAAA,CAAA,MAAA;AACR,sBAAU,MAAV;AACA;AACD,aAAK,WAAL;AACC;AACA;AAXF;AAaA","file":"gif.generator.service.f06368d6.map","sourceRoot":"..","sourcesContent":["import { GIFGenerator } from './gif.generator';\r\n\r\nconst gifGenerator: GIFGenerator = new GIFGenerator();\r\n\r\naddEventListener('message', ev => {\r\n\tconsole.log(ev.data);\r\n});\r\naddEventListener('message', workHandler);\r\n\r\nfunction init(width: number, height: number, GCT: string[]): void {\r\n\tconsole.log('initilizing');\r\n\r\n\tgifGenerator.init(width, height, GCT);\r\n\tpostMessage('init complete', 'self');\r\n}\r\n\r\nfunction addFrames({ frames }: { frames: number[][] }): void {\r\n\tconsole.log('stitching frames');\r\n\r\n\tframes.forEach(frame => {\r\n\t\tgifGenerator.generateFrame(frame);\r\n\t});\r\n}\r\n\r\nfunction getStream() {\r\n\tconsole.log('getting data');\r\n\r\n\tpostMessage(gifGenerator.getStream());\r\n}\r\n\r\nfunction workHandler({ data }: { data: any }) {\r\n\tconsole.log(data);\r\n\tswitch (data.job) {\r\n\t\tcase 'init':\r\n\t\t\tconst { width, height, globalColorTable } = data.params;\r\n\t\t\tinit(width, height, globalColorTable);\r\n\t\t\tbreak;\r\n\t\tcase 'generateFrame':\r\n\t\t\tconst { frames } = data.params;\r\n\t\t\taddFrames(frames);\r\n\t\t\tbreak;\r\n\t\tcase 'getStream':\r\n\t\t\tgetStream();\r\n\t\t\tbreak;\r\n\t}\r\n}\r\n"]}