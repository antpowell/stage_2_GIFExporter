{"version":3,"sources":["src\\process.frame.service.ts"],"names":[],"mappings":"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","file":"process.frame.service.193a1b77.map","sourceRoot":"..","sourcesContent":["onmessage = ({\r\n\tdata: {\r\n\t\tmessage,\r\n\t\tdata: { frame, width, height },\r\n\t},\r\n}) => {\r\n\tswitch (message) {\r\n\t\tcase 'processFrame':\r\n\t\t\tflipFrame(frame, width, height);\r\n\t\t\tbreak;\r\n\t\tdefault:\r\n\t\t\tthrow new Error('invalid message to frame processer worker');\r\n\t}\r\n};\r\n\r\nexport function flipFrame(frame: Uint8Array, width: number, height: number) {\r\n\treturn new Promise(async (resolve, reject) => {\r\n\t\tconst mid = (height / 2) | 0;\r\n\t\tconst rowLen = width * 4;\r\n\r\n\t\tlet flipRow = new Uint8Array(rowLen);\r\n\t\tfor (let rowNum = 0; rowNum < mid; ++rowNum) {\r\n\t\t\tlet topPointer = rowNum * rowLen;\r\n\t\t\tlet bottomPointer = (height - rowNum - 1) * rowLen;\r\n\r\n\t\t\tflipRow.set(frame.subarray(topPointer, topPointer + rowLen));\r\n\t\t\tframe.copyWithin(topPointer, bottomPointer, bottomPointer + rowLen);\r\n\t\t\tframe.set(flipRow, bottomPointer);\r\n\t\t}\r\n\t\tresolve(await toRGBData(frame));\r\n\t});\r\n}\r\n\r\n/**\r\n * Removes Alpha values from frame and transform data into number[] and string[]\r\n *\r\n * @param frame\r\n * @param width\r\n * @param hieght\r\n * @return { rgbData:number[], rgbData: string[]}\r\n */\r\nfunction toRGBData(frame: Uint8Array) {\r\n\t//create pixels from frame\r\n\t//remove alpha\r\n\t//transform pixels into string formated version\r\n\treturn new Promise((resolve, reject) => {\r\n\t\tconst numericalRGBData = frame.filter((pixel: number, index: number) => (index + 1) % 4 !== 0);\r\n\t\tconst stringRGBData: string[] = [];\r\n\t\tlet pixel = '';\r\n\t\tnumericalRGBData.forEach((color, index) => {\r\n\t\t\tpixel += pad(color);\r\n\t\t\tif ((index + 1) % 3 === 0) {\r\n\t\t\t\tstringRGBData.push(pixel);\r\n\t\t\t\tpixel = '';\r\n\t\t\t}\r\n\t\t});\r\n\t\tpostMessage({ message: 'processFrame complete', data: { numericalRGBData, stringRGBData } });\r\n\t\tresolve({ numericalRGBData, stringRGBData });\r\n\t});\r\n}\r\n\r\nfunction pad(color: number): string {\r\n\tif (color < 16) {\r\n\t\treturn `0${color.toString(16)}`;\r\n\t} else {\r\n\t\treturn color.toString(16);\r\n\t}\r\n}\r\n"]}